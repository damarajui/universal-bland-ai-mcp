version: '3.8'

services:
  bland-mcp-enterprise:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: bland-mcp-server
    restart: unless-stopped
    
    environment:
      - NODE_ENV=production
      - BLAND_API_KEY=${BLAND_API_KEY}
      - MCP_SERVER_PORT=3000
      - LOG_LEVEL=info
      - ENABLE_METRICS=true
    
    ports:
      - "3000:3000"
    
    volumes:
      - ./logs:/app/logs
    
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 3000, path: '/health', timeout: 2000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    networks:
      - bland-mcp-network

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: bland-mcp-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - bland-mcp-network
    profiles:
      - monitoring

  # Optional: Add Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: bland-mcp-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - bland-mcp-network
    profiles:
      - monitoring

networks:
  bland-mcp-network:
    driver: bridge

volumes:
  grafana-storage: 